@startuml

actor user
box "Lightspeed Product"
  participant int_client as "Integration Client"
  participant int_provider as "Integration Provider"
  participant legacy_idp as "Legacy IDP"
end box
participant authls as "AuthLS"

!procedure $authentication()
  authls->>user: Authentication starts (User is shown a login prompt)
  group Ajax
    user->>authls: User sends credentials (POST <authls_domain>/auth/lightspeed/<realm>)
    $verifyCredentials()
  end
  user->>authls: Resume authentication
  authls->>authls: AuthLS Session is created
!endprocedure

!procedure $verifyCredentials()
  group AuthLS does not own credentials for the realm [[https://fireplace.lightspeed.app/docs-preview/62-lightspeed-id/master/20-integrating/20-authentication-provider docs]]
    note over authls, legacy_idp: Credentials are proxied and verifed
    authls->>legacy_idp: POST <verify_credentials_uri>
    legacy_idp->>authls: Response: 200, { user_data }
    authls->>user: Resume authentication
  end
  alt Failure
    legacy_idp->>authls: Response: 401
    authls->>user: Error shown on login page
  end
!endprocedure

!procedure $applicationInitiatedLogin()
  activate int_client
    note left of int_client: Application Initiated Login URL
    note right of int_client: Start Authorization Code Flow
    int_client->>int_client: Create state cookie [[https://fireplace.lightspeed.app/docs-preview/62-lightspeed-id/master/20-integrating/10-external-authentication-provider docs]]
    int_client->>authls: Redirect to <authls_domain>/oidc/authorize\n?state=<state>\n&client_id=<client_id>\n&redirect_uri=<redirect_uri>\n&audience=<audience>\n&scope=<scopes>
  deactivate int_client
!endprocedure

!procedure $oidcCallback()
  group OIDC Callback success
    int_client->>int_client: Verify state
    int_client->>authls: Retrieve tokens from code\nPOST <authls_domain>/oidc/token
    authls->>int_client: Response: 200, {id_token, access_token, refresh_token?, ...}
    note right of int_client: End Authorization Code Flow
  end
!endprocedure
@enduml
